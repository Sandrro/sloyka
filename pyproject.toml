[tool.poetry]
name = "soika"
version = "0.3.0.1"
description = "Library for city identity analysis from social media posts and comments"
authors = ["sandrro", "georgekontsevik"]
readme = "README.md"
packages = [{ include = "soika" }]

[[tool.poetry.source]]
name = "torch"
url = "https://download.pytorch.org/whl/cu126"
priority = "explicit"

[tool.poetry.dependencies]
python = ">=3.10.6,<3.12"

# Зависимости, необходимые для работы модулей Geocoder и VKParser.
flair        = { version = "0.15.1", optional = true }      # используется для моделей и обработки текста
geopandas    = { version = "0.14.4", optional = true }      # работа с геоданными
pandas       = { version = "2.2.2", optional = true }         # обработка табличных данных
pymorphy2    = { version = "0.9.1", optional = true }         # морфологический анализ
torch        = { version = "^2.6.0", source = "torch", optional = true }  # глубокое обучение
rapidfuzz    = { version = "^3.9.0", optional = true }        # нечеткое сравнение строк
nltk         = { version = "3.8.1", optional = true }         # обработка естественного языка
shapely      = { version = "2.0.1", optional = true }         # работа с геометрией
tqdm         = { version = "4.64.1", optional = true }        # индикатор прогресса
loguru       = { version = "0.7.2", optional = true }         # логирование
pandarallel  = { version = "1.6.5", optional = true }         # параллельные вычисления для pandas
osmnx        = { version = "1.5.1", optional = true }         # извлечение данных OpenStreetMap
osmapi       = { version = "^4.0.0", optional = true }        # работа с OSM API
osm2geojson  = { version = "0.2.3", optional = true }         # конвертация OSM в GeoJSON
networkx     = { version = "3.3", optional = true }           # работа с графами
numpy        = { version = "1.25.2", optional = true }        # вычисления с массивами
geopy        = { version = "2.3.0", optional = true }         # геокодирование (Nominatim и др.)
requests     = { version = "^2.28.0", optional = true }       # HTTP-запросы
natasha      = { version = "1.6.0", optional = true }         # обработка именованных сущностей и др.

[tool.poetry.extras]
geocoder = [
    "flair",
    "geopandas",
    "pandas",
    "pymorphy2",
    "torch",
    "rapidfuzz",
    "nltk",
    "shapely",
    "tqdm",
    "loguru",
    "pandarallel",
    "osmnx",
    "osmapi",
    "osm2geojson",
    "networkx",
    "numpy",
    "geopy",
    "requests",
    "natasha"
]

vk_parser = [
    "pandas",
    "tqdm",
    "requests"
]

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
furo = "^2024.5.6"
readthedocs-sphinx-search = "^0.3.2"
sphinx-autobuild = "^2024.4.16"
sphinx-design = "^0.6.0"
sphinx-hoverxref = "^1.4.0"
sphinx-inline-tabs = "^2023.4.21"
sphinx-issues = "^4.1.0"
sphinx-notfound-page = "^1.0.2"
sphinx = "^7.3.7"
myst-parser = "^3.0.1"
sphinx-rtd-theme = "^2.0.0"

[tool.poetry.group.test.dependencies]
pytest = "7.4.3"

[tool.poetry.group.dev.dependencies]
ipykernel = "6.29.0"
flake8 = "6.0.0"
isort = "5.12.0"
black = "23.1.0"
pylint = "3.0.2"
jupyter = "^1.0.0"
testresources = "^2.0.1"

[build-system]
requires = ["poetry-core", "setuptools", "wheel"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120